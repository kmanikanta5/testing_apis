generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model equipment {
  equipment_id             Int           @id @default(autoincrement())
  unit_number              String        @unique @db.VarChar(100)
  description              String        @db.VarChar(255)
  date_in_service          DateTime?
  estmated_life_in_months  Int?
  vin                      String?       @db.VarChar(255)
  oem_lookup_id            Int?
  status                   String?       @db.VarChar(10)
  oem_make_model_lookup_id Int?
  equipment_type_lookup_id Int?
  customer_unit_number     String?       @db.VarChar(100)
  custom_equipment_name    String?       @db.VarChar(255)
  door_type                String?       @db.VarChar(10)
  floor_type               String?       @db.VarChar(10)
  roof_type                String?       @db.VarChar(10)
  brake_type               String?       @db.VarChar(10)
  rim_type                 String?       @db.VarChar(10)
  suspension_type          String?       @db.VarChar(10)
  wall_type                String?       @db.VarChar(10)
  gross_unit_weight        Decimal?      @db.Decimal(9, 2)
  tare_weight              Decimal?      @db.Decimal(9, 2)
  uom_lookup_id            Int?
  tire_size                String?       @db.VarChar(100)
  trailer_height           String?       @db.VarChar(100)
  trailer_length           String?       @db.VarChar(100)
  trailer_width            String?       @db.VarChar(100)
  track_code               String?       @db.VarChar(10)
  break_type               String?       @db.VarChar(100)
  color                    String?       @db.VarChar(100)
  liftgate                 String?       @db.VarChar(100)
  lifgate_serial           String?       @db.VarChar(100)
  ten_branch               String?       @db.VarChar(100)
  last_pm_date             DateTime?
  next_pm_due              DateTime?
  dot_cvi_status           String?
  dot_cvi_expire           DateTime?
  last_reefer_pm_date      DateTime?
  next_reefer_pm_due       DateTime?
  last_m_and_r_date        DateTime?
  reefer_make_type         String?
  reefer_serial            String?
  axle_count               Int?
  ownership_type           String?       @db.VarChar(10)
  acquisition_type         String?       @db.VarChar(10)
  acquisition_date         DateTime?
  acquisition_price        Decimal?      @db.Decimal(9, 2)
  assigned_to              String?       @db.VarChar(50)
  assigned_date            DateTime
  domicile                 String?       @db.VarChar(255)
  is_deleted               Boolean       @default(false)
  deleted_by               Int?
  deleted_at               DateTime?
  created_at               DateTime      @default(now())
  created_by               Int?
  updated_at               DateTime?
  updated_by               Int?
  attachmentAttachment_id  BigInt?
  event_master_id          Int?
  geofence_account_id      Json?
  event_master_ref         event_master? @relation(fields: [event_master_id], references: [event_master_id])

  current_equipment_gps_location  current_equipment_gps_location[]
  dot_inspection                  dot_inspection[]
  attachment                      attachment?                       @relation(fields: [attachmentAttachment_id], references: [attachment_id])
  brake_type_lookup               simple_field_lookup?              @relation("equipment_brake_type_relation", fields: [brake_type], references: [field_code])
  door_type_lookup                simple_field_lookup?              @relation("equipment_door_type_relation", fields: [door_type], references: [field_code])
  equipment_type_lookup_ref       equipment_type_lookup?            @relation(fields: [equipment_type_lookup_id], references: [equipment_type_lookup_id])
  floor_type_lookup               simple_field_lookup?              @relation("equipment_floor_type_relation", fields: [floor_type], references: [field_code])
  oem_ref                         oem_lookup?                       @relation(fields: [oem_lookup_id], references: [oem_lookup_id])
  oem_make_model_ref              oem_make_model_lookup?            @relation(fields: [oem_make_model_lookup_id], references: [oem_make_model_lookup_id])
  rim_type_lookup                 simple_field_lookup?              @relation("equipment_rim_type_relation", fields: [rim_type], references: [field_code])
  roof_type_lookup                simple_field_lookup?              @relation("equipment_roof_type_relation", fields: [roof_type], references: [field_code])
  simple_field_lookup             simple_field_lookup?              @relation("equipment_status_relation", fields: [status], references: [field_code])
  suspension_type_lookup          simple_field_lookup?              @relation("equipment_suspension_type_relation", fields: [suspension_type], references: [field_code])
  uom_ref                         uom_lookup?                       @relation(fields: [uom_lookup_id], references: [uom_lookup_id])
  wall_type_lookup                simple_field_lookup?              @relation("equipment_wall_type_relation", fields: [wall_type], references: [field_code])
  equipment_assignment            equipment_assignment[]
  equipment_addon_ref             equipment_has_addon?
  equipment_attachment_ref        equipment_has_attachment?
  equipment_iot_device_ref        equipment_has_iot_device?
  equipment_load_detail           equipment_load_detail[]
  equipment_permit                equipment_permit?
  preventive_maintenance_event    preventive_maintenance_event[]
  preventive_maintenance_schedule preventive_maintenance_schedule[]
  service_requests                service_request[]                 @relation("EquipmentToServiceRequests")
  equipment_geofence_event        equipment_geofence_event[]

  @@index([unit_number], map: "unit_number_bidx1")
  @@index([status], map: "status_bidx1")
}

model equipment_load_detail {
  equipment_load_detail_id Int                 @id @default(autoincrement())
  equipment_id             Int
  equipment_load_date      DateTime?
  equipment_unload_date    DateTime?
  equipment_load_detail    String              @db.VarChar(255)
  equipment_load_status    String              @db.VarChar(255)
  equipment_ref            equipment           @relation(fields: [equipment_id], references: [equipment_id])
  load_status_lookup       simple_field_lookup @relation("equipment_load_status", fields: [equipment_load_status], references: [field_code])
}

model equipment_addon {
  equipment_addon_id            Int                  @id @default(autoincrement())
  addon_type                    String               @db.VarChar(10)
  effective_date                DateTime?
  status                        String               @db.VarChar(10)
  addon_installation_date       DateTime?
  addon_last_service_date       DateTime?
  is_deleted                    Boolean              @default(false)
  deleted_by                    Int?
  deleted_at                    DateTime?
  created_at                    DateTime             @default(now())
  created_by                    Int?
  updated_at                    DateTime?
  updated_by                    Int?
  equipment_addon_status_lookup simple_field_lookup  @relation("equipment_addon_status_relation", fields: [status], references: [field_code])
  equipment_has_addon_ref       equipment_has_addon?

  @@index([equipment_addon_id], map: "equipment_addon_id_idx1")
  @@index([addon_type], map: "equipment_addon_type_bidx1")
  @@index([status], map: "equipment_addon_status_bidx1")
}

model equipment_permit {
  equipment_permit_id  Int       @id
  equipment_id         Int       @unique
  license_plate_number String?   @db.VarChar(255)
  license_plate_state  String?   @db.VarChar(255)
  permit_date          DateTime?
  is_deleted           Boolean   @default(false)
  deleted_by           Int?
  deleted_at           DateTime?
  created_at           DateTime  @default(now())
  updated_at           DateTime?
  updated_by           String?   @db.VarChar(255)
  equipment_ref        equipment @relation(fields: [equipment_id], references: [equipment_id])

  @@index([equipment_permit_id], map: "equipment_permit_id_idx1")
  @@index([equipment_id], map: "equipment_permit_equipment_id_bidx1")
  @@index([license_plate_number], map: "equipment_permit_license_plate_bidx1")
}

model equipment_has_addon {
  equipment_has_addon_id            Int                 @id @default(autoincrement())
  equipment_id                      Int                 @unique
  equipment_addon_id                Int                 @unique
  effective_date                    DateTime?
  status                            String              @db.VarChar(10)
  created_at                        DateTime            @default(now())
  created_by                        Int?
  equipment_addon_ref               equipment_addon     @relation(fields: [equipment_addon_id], references: [equipment_addon_id])
  equipment_ref                     equipment           @relation(fields: [equipment_id], references: [equipment_id])
  equipment_has_addon_status_lookup simple_field_lookup @relation("equipment_has_addon_status_relation", fields: [status], references: [field_code])

  @@index([equipment_has_addon_id], map: "equipment_has_addon_id_idx1")
  @@index([equipment_id], map: "equipment_has_addon_equipment_id_bidx1")
  @@index([equipment_addon_id], map: "equipment_has_addon_addon_id_bidx1")
  @@index([status], map: "equipment_has_addon_status_bidx1")
}

model iot_device {
  iot_device_id               BigInt                    @id @default(autoincrement())
  iot_device_vendor_lookup_id Int?
  device_id_external          String?                   @db.VarChar(100)
  device_type                 String?                   @db.VarChar(255)
  device_installation_date    DateTime?
  device_last_service_date    DateTime?
  status                      String?                   @db.VarChar(10)
  battery_health              String?                   @db.VarChar(100)
  is_deleted                  Boolean                   @default(false)
  deleted_by                  Int?
  deleted_at                  DateTime?
  created_at                  DateTime                  @default(now())
  created_by                  Int?
  updated_at                  DateTime?
  updated_by                  Int?
  equipment_iot_device_ref    equipment_has_iot_device?
  iot_device_vendor_ref       iot_device_vendor_lookup? @relation(fields: [iot_device_vendor_lookup_id], references: [iot_device_vendor_lookup_id])
  iot_device_status_lookup    simple_field_lookup?      @relation("iot_device_status_relation", fields: [status], references: [field_code])

  @@index([iot_device_id], map: "iot_device_id_idx1")
  @@index([device_id_external], map: "iot_device_external_id_bidx1")
  @@index([device_type], map: "iot_device_type_bidx1")
  @@index([status], map: "iot_device_status_bidx1")
}

model equipment_has_iot_device {
  equipment_has_iot_device_id BigInt                   @id @default(autoincrement())
  equipment_id                Int                      @unique
  iot_device_id               BigInt                   @unique
  effective_date              DateTime?
  status                      String?                  @db.VarChar(10)
  created_at                  DateTime                 @default(now())
  created_by                  Int?
  equipment_gps_location      equipment_gps_location[]

  equipment_ref                          equipment            @relation(fields: [equipment_id], references: [equipment_id])
  iot_device_ref                         iot_device           @relation(fields: [iot_device_id], references: [iot_device_id])
  equipment_has_iot_device_status_lookup simple_field_lookup? @relation("equipment_has_iot_device_status_relation", fields: [status], references: [field_code])
  iot_device_metric_ref                  iot_device_metric?

  @@index([equipment_has_iot_device_id], map: "equipment_has_iot_device_id_idx1")
  @@index([equipment_id], map: "equipment_has_iot_device_equipment_id_bidx1")
  @@index([iot_device_id], map: "equipment_has_iot_device_iot_id_bidx1")
}

model equipment_gps_location {
  equipment_gps_location_id          BigInt                          @id @default(autoincrement())
  equipment_has_iot_device_id        BigInt?
  current_equipment_gps_location_id  BigInt?
  latitude                           Decimal?                        @db.Decimal(9, 2)
  longitude                          Decimal?                        @db.Decimal(9, 2)
  location                           String?                         @db.VarChar(500)
  motion_status                      String?                         @db.VarChar(10)
  last_gps_update                    DateTime?
  is_deleted                         Boolean                         @default(false)
  deleted_by                         Int?
  deleted_at                         DateTime?
  created_at                         DateTime                        @default(now())
  created_by                         Int?
  updated_at                         DateTime?
  updated_by                         Int?
  equipment_has_iot_device_ref       equipment_has_iot_device?       @relation(fields: [equipment_has_iot_device_id], references: [equipment_has_iot_device_id])
  current_equipment_gps_location_ref current_equipment_gps_location? @relation(fields: [current_equipment_gps_location_id], references: [current_equipment_gps_location_id])

  @@index([equipment_gps_location_id], map: "equipment_gps_location_id_idx1")
  @@index([equipment_has_iot_device_id], map: "equipment_gps_location_device_id_bidx1")
}

model current_equipment_gps_location {
  current_equipment_gps_location_id      BigInt                   @id @default(autoincrement())
  equipment_id                           Int                      @unique
  latitude                               Decimal?                 @db.Decimal(9, 2)
  longitude                              Decimal?                 @db.Decimal(9, 2)
  location                               String?                  @db.VarChar(500)
  motion_status                          String?                  @db.VarChar(255)
  alarm_code_status                      String?                  @default("ACTIVE") @db.VarChar(255)
  last_gps_update                        DateTime?
  created_by                             Int?
  created_at                             DateTime                 @default(now())
  updated_at                             DateTime?
  updated_by                             Int?
  current_equipment_alarm_status_lookup  simple_field_lookup?     @relation("current_equipment_alarm_status", fields: [alarm_code_status], references: [field_code])
  equipment_ref                          equipment                @relation(fields: [equipment_id], references: [equipment_id])
  current_equipment_motion_status_lookup simple_field_lookup?     @relation("current_equipment_motion_status", fields: [motion_status], references: [field_code])
  equipment_gps_location                 equipment_gps_location[]

  @@index([equipment_id], map: "current_gps_location_equipment_id_idx")
}

model iot_device_metric {
  iot_device_metric_id         BigInt                   @id @default(autoincrement())
  equipment_has_iot_device_id  BigInt                   @unique
  uom_lookup_id                Int?                     @unique
  metric_value                 Decimal?                 @db.Decimal(9, 2)
  is_deleted                   Boolean                  @default(false)
  deleted_by                   Int?
  deleted_at                   DateTime?
  created_at                   DateTime                 @default(now())
  created_by                   Int?
  updated_at                   DateTime?
  updated_by                   Int?
  equipment_has_iot_device_ref equipment_has_iot_device @relation(fields: [equipment_has_iot_device_id], references: [equipment_has_iot_device_id])
  uom_ref                      uom_lookup?              @relation(fields: [uom_lookup_id], references: [uom_lookup_id])

  @@index([iot_device_metric_id], map: "iot_device_metric_id_idx1")
  @@index([equipment_has_iot_device_id], map: "iot_device_metric_device_id_bidx1")
}

/// final
model attachment {
  attachment_id                     BigInt                              @id @default(autoincrement())
  mime_type                         String?                             @db.VarChar(100)
  document_category_type            String                              @db.VarChar(50)
  name                              String?                             @db.VarChar(100)
  description                       String?                             @db.VarChar(255)
  date_uploaded                     DateTime?
  url                               String?                             @db.VarChar(255)
  expiration_date                   DateTime?
  is_deleted                        Boolean                             @default(false)
  deleted_by                        Int?
  deleted_at                        DateTime?
  created_at                        DateTime                            @default(now())
  created_by                        Int?
  updated_at                        DateTime?
  updated_by                        Int?
  equipment                         equipment[]
  equipment_attachments             equipment_has_attachment?
  master_agreement_has_attachment   master_agreement_has_attachment[]
  schedule_agreement_has_attachment schedule_agreement_has_attachment[]
  service_request                   service_request?                    @relation("AttachmentToServiceRequest")
  workorder_has_attachment          workorder_has_attachment?

  @@index([attachment_id], map: "attachment_id_idx1")
  @@index([name], map: "attachment_name_bidx1")
}

model equipment_has_attachment {
  equipment_has_attachment_id BigInt     @id @default(autoincrement())
  equipment_id                Int        @unique
  attachment_id               BigInt     @unique
  date_uploaded               DateTime?
  expiration_date             DateTime?
  created_at                  DateTime   @default(now())
  created_by                  Int?
  attachment_ref              attachment @relation(fields: [attachment_id], references: [attachment_id])
  equipment_ref               equipment  @relation(fields: [equipment_id], references: [equipment_id])

  @@index([equipment_has_attachment_id], map: "equipment_has_attachment_id_idx1")
  @@index([equipment_id], map: "equipment_has_attachment_equipment_id_bidx1")
  @@index([attachment_id], map: "equipment_has_attachment_attachment_id_bidx1")
}

model equipment_type_lookup {
  equipment_type_lookup_id     Int                            @id @default(autoincrement())
  equipment_description        String                         @db.VarChar(255)
  equipment_type               String                         @unique @db.VarChar(50)
  equipment_name               String                         @db.VarChar(50)
  is_deleted                   Boolean                        @default(false)
  created_at                   DateTime                       @default(now())
  created_by                   Int?
  equipment                    equipment[]
  schedule_agreement_line_item schedule_agreement_line_item[]

  @@index([equipment_type_lookup_id], map: "equipment_type_lookup_id_idx1")
  @@index([equipment_name], map: "equipment_type_lookup_name_bidx1")
}

model iot_device_vendor_lookup {
  iot_device_vendor_lookup_id     Int                 @id @default(autoincrement())
  vendor_name                     String              @db.VarChar(255)
  vendor_description              String              @db.VarChar(255)
  vendor_method_type              String              @db.VarChar(10)
  vendor_service_type             String              @db.VarChar(10)
  status                          String              @db.VarChar(10)
  created_at                      DateTime            @default(now())
  created_by                      Int?
  iot_device_ref                  iot_device[]
  iot_device_vendor_status_lookup simple_field_lookup @relation("iot_device_vendor_status_relation", fields: [status], references: [field_code])

  @@index([iot_device_vendor_lookup_id], map: "iot_device_vendor_lookup_id_idx1")
  @@index([vendor_name], map: "iot_device_vendor_lookup_name_bidx1")
}

model oem_lookup {
  oem_lookup_id             Int                    @id @default(autoincrement())
  manufacturer_code         String                 @unique @db.VarChar(255)
  manufacturer_name         String                 @db.VarChar(255)
  is_deleted                Boolean                @default(false)
  created_at                DateTime               @default(now())
  created_by                Int?
  equipment                 equipment[]
  oem_make_model_lookup_ref oem_make_model_lookup?

  @@index([oem_lookup_id], map: "oem_lookup_id_idx1")
  @@index([manufacturer_name], map: "oem_lookup_manufacturer_name_bidx1")
}

model uom_lookup {
  uom_lookup_id         Int                @id @default(autoincrement())
  uom_type              String             @db.VarChar(10)
  description           String?            @db.VarChar(255)
  is_deleted            Boolean            @default(false)
  created_at            DateTime           @default(now())
  created_by            Int?
  equipment             equipment[]
  iot_device_metric_ref iot_device_metric?

  @@index([uom_lookup_id], map: "uom_lookup_id_idx1")
  @@index([uom_type], map: "uom_lookup_type_bidx1")
}

model oem_make_model_lookup {
  oem_make_model_lookup_id     Int                            @id @default(autoincrement())
  oem_lookup_id                Int                            @unique
  make                         String?                        @db.VarChar(100)
  model                        String?                        @db.VarChar(100)
  year                         String?                        @db.VarChar(100)
  length                       Int?
  is_deleted                   Boolean                        @default(false)
  deleted_by                   Int?
  deleted_at                   DateTime?
  created_at                   DateTime                       @default(now())
  created_by                   Int?
  updated_at                   DateTime?
  updated_by                   Int?
  equipment_ref                equipment[]
  oem_ref                      oem_lookup                     @relation(fields: [oem_lookup_id], references: [oem_lookup_id])
  schedule_agreement_line_item schedule_agreement_line_item[]

  @@index([oem_make_model_lookup_id], map: "oem_make_model_lookup_id_idx1")
  @@index([oem_lookup_id], map: "oem_make_model_lookup_oem_id_bidx1")
  @@index([make], map: "oem_make_model_lookup_make_bidx1")
  @@index([model], map: "oem_make_model_lookup_model_bidx1")
  @@index([year], map: "oem_make_model_lookup_year_bidx1")
  @@index([is_deleted], map: "oem_make_model_lookup_is_deleted_bidx1")
}

model facility_lookup {
  facility_lookup_id              Int                               @id @default(autoincrement())
  facility_code                   String                            @unique @db.VarChar(50)
  facility_name                   String                            @db.VarChar(50)
  facility_description            String                            @db.VarChar(255)
  is_deleted                      Boolean                           @default(false)
  created_at                      DateTime                          @default(now())
  created_by                      Int?
  preventive_maintenance_schedule preventive_maintenance_schedule[]
  schedule_agreement              schedule_agreement[]

  @@index([facility_lookup_id], map: "facility_lookup_id_idx1")
  @@index([facility_name], map: "facility_name_bidx1")
}

model customer {
  customer_id            Int                 @id @default(autoincrement())
  customer_name          String              @db.VarChar(255)
  customer_class         String              @db.VarChar(10)
  status                 String              @db.VarChar(10)
  reference_number       String              @db.VarChar(100)
  sold_by_salesperson_id Int?
  is_deleted             Boolean             @default(false)
  deleted_by             Int?
  deleted_at             DateTime?
  created_at             DateTime            @default(now())
  created_by             Int?
  updated_at             DateTime?
  updated_by             Int?
  auth0_customer_id      String?             @db.VarChar(255)
  accounts               account[]
  customer_status_lookup simple_field_lookup @relation("customer_status_relation", fields: [status], references: [field_code])
  geofence_accounts      geofence_account[]
  geofence_alerts        geofence_alerts[]
  master_agreement       master_agreement[]
  user                   user[]
  user_role              user_role[]
  event_master           event_master[]

  @@index([customer_id], map: "customer_id_idx1")
  @@index([customer_name], map: "customer_name_bidx1")
  @@index([reference_number], map: "reference_number_bidx1")
}

model simple_field_lookup {
  simple_field_lookup_id                    Int                               @id @default(autoincrement())
  field_name                                String                            @db.VarChar(100)
  field_code                                String                            @unique @db.VarChar(255)
  short_description                         String                            @db.VarChar(100)
  long_description                          String?                           @db.VarChar(255)
  language_code                             String                            @default("ENG") @db.VarChar(3)
  status                                    String                            @default("A") @db.VarChar(3)
  effective_date                            DateTime                          @default(now())
  is_deleted                                Boolean                           @default(false)
  created_at                                DateTime                          @default(now())
  created_by                                Int?
  account_by_status                         account[]                         @relation("account_status_relation")
  alert_templates_by_status                 alert_templates[]                 @relation("alert_template_status_relation")
  contract_type_by_status                   contract_type_lookup[]            @relation("contract_type_status_relation")
  country_by_status                         country_lookup[]                  @relation("country_status_relation")
  current_equipment_by_alarm_status         current_equipment_gps_location[]  @relation("current_equipment_alarm_status")
  current_equipment_by_motion_status        current_equipment_gps_location[]  @relation("current_equipment_motion_status")
  customer_by_status                        customer[]                        @relation("customer_status_relation")
  delivery_method_by_status                 delivery_method_lookup[]          @relation("delivery_method_status_relation")
  equipment_by_brake_type                   equipment[]                       @relation("equipment_brake_type_relation")
  equipment_by_door_type                    equipment[]                       @relation("equipment_door_type_relation")
  equipment_by_floor_type                   equipment[]                       @relation("equipment_floor_type_relation")
  equipment_by_rim_type                     equipment[]                       @relation("equipment_rim_type_relation")
  equipment_by_roof_type                    equipment[]                       @relation("equipment_roof_type_relation")
  equipment_by_status                       equipment[]                       @relation("equipment_status_relation")
  equipment_by_suspension_type              equipment[]                       @relation("equipment_suspension_type_relation")
  equipment_by_wall_type                    equipment[]                       @relation("equipment_wall_type_relation")
  equipment_addon_by_status                 equipment_addon[]                 @relation("equipment_addon_status_relation")
  equipment_assignment_by_reason            equipment_assignment[]            @relation("equipment_assignment_reason_relation")
  equipment_has_addon_by_status             equipment_has_addon[]             @relation("equipment_has_addon_status_relation")
  equipment_has_iot_device_by_status        equipment_has_iot_device[]        @relation("equipment_has_iot_device_status_relation")
  equipment_load_by_loadStaus               equipment_load_detail[]           @relation("equipment_load_status")
  equipment_type_allocation_by_status       equipment_type_allocation[]       @relation("equipment_type_allocation_status_relation")
  geofence_account_by_status                geofence_account[]                @relation("geofence_account_status_relation")
  geofence_event_type_by_status             geofence_event_type_lookup[]      @relation("geofence_event_type_status_relation")
  iot_device_by_status                      iot_device[]                      @relation("iot_device_status_relation")
  iot_device_vendor_by_status               iot_device_vendor_lookup[]        @relation("iot_device_vendor_status_relation")
  master_agreement_by_status                master_agreement[]                @relation("master_agreement_status_relation")
  preventive_maintenance_event_by_status    preventive_maintenance_event[]    @relation("preventive_maintenance_event_status_relation")
  preventive_maintenance_schedule_by_status preventive_maintenance_schedule[] @relation("preventive_maintenance_schedule_status_relation")
  schedule_agreement_by_status              schedule_agreement[]              @relation("schedule_agreement_status_relation")
  tag_by_status                             tag_lookup[]                      @relation("tag_status_relation")
  user_by_status                            user[]                            @relation("user_status_relation")
}

model user {
  user_id              Int                  @id @default(autoincrement())
  customer_id          Int?
  user_role_id         Int
  country_lookup_id    Int?
  assigned_account_ids Int[]                @default([])
  first_name           String?              @db.VarChar(255)
  last_name            String?              @db.VarChar(255)
  email                String?              @unique @db.VarChar(255)
  phone_number         String?              @db.VarChar(255)
  designation          String?              @db.VarChar(255)
  avatar               String?              @db.VarChar(255)
  auth_0_reference_id  String               @unique @db.VarChar(255)
  auth0_role_id        String?
  status               String
  is_customer_user     Boolean              @default(false)
  first_active         DateTime?
  last_active          DateTime?
  created_at           DateTime             @default(now())
  created_by           Int?
  updated_at           DateTime?
  updated_by           Int?
  auth0_customer_id    String?              @db.VarChar(255)
  permissions          Json?
  customer_ref         customer?            @relation(fields: [customer_id], references: [customer_id])
  user_status_lookup   simple_field_lookup  @relation("user_status_relation", fields: [status], references: [field_code])
  user_role_ref        user_role            @relation(fields: [user_role_id], references: [user_role_id])
  column_preferences   column_preferences[]
  country_lookup_ref   country_lookup?      @relation(fields: [country_lookup_id], references: [country_lookup_id])

  @@index([user_id], map: "user_id_idx1")
}

model column_preferences {
  column_preferences_id           Int                           @id @default(autoincrement())
  user_id                         Int
  column_preference_table_name_id Int
  selected_columns                Json
  created_at                      DateTime                      @default(now())
  updated_at                      DateTime                      @updatedAt
  user                            user                          @relation(fields: [user_id], references: [user_id])
  column_preference_table         column_preference_table_name? @relation(fields: [column_preference_table_name_id], references: [column_preference_table_name_id])

  @@unique([user_id, column_preference_table_name_id])
}

model column_preference_table_name {
  column_preference_table_name_id Int    @id @default(autoincrement())
  table_name                      String @db.VarChar(100)

  column_preferences column_preferences[]
}

model user_role {
  user_role_id Int  @id @default(autoincrement())
  customer_id  Int?

  name                   String
  description            String?
  auth0_role_id          String?
  auth0_role_name        String?   @db.VarChar(255)
  accessible_account_ids Int[]
  role_permission        Json?
  created_at             DateTime  @default(now())
  created_by             Int?
  updated_by             DateTime? @default(now())
  deleted_by             Int?
  deleted_at             DateTime?
  users                  user[]
  customer               customer? @relation(fields: [customer_id], references: [customer_id])

  @@unique([customer_id, name])
}

model account {
  account_id                      Int                               @id @default(autoincrement())
  parent_account_id               Int?
  billing_account_id              Int?
  customer_id                     Int
  primary_contact_user_id         Int?
  country_lookup_id               Int
  account_name                    String?                           @db.VarChar(255)
  account_number                  String?                           @db.VarChar(20)
  legacy_account_number           String?                           @db.VarChar(30)
  account_type                    AccountType                       @default(NATIONAL)
  account_manager_id              Int?
  number_of_users                 Int?
  status                          String?                           @db.VarChar(10)
  is_deleted                      Boolean                           @default(false)
  deleted_by                      Int?
  deleted_at                      DateTime?
  created_at                      DateTime                          @default(now())
  created_by                      Int?
  updated_at                      DateTime?
  updated_by                      Int?
  country_lookup_ref              country_lookup                    @relation(fields: [country_lookup_id], references: [country_lookup_id])
  customer                        customer                          @relation(fields: [customer_id], references: [customer_id])
  account_status_lookup           simple_field_lookup?              @relation("account_status_relation", fields: [status], references: [field_code])
  dot_inspection                  dot_inspection[]
  equipment_type_allocation       equipment_type_allocation[]
  master_agreement                master_agreement[]
  preventive_maintenance_event    preventive_maintenance_event[]
  preventive_maintenance_schedule preventive_maintenance_schedule[]
  equipment_geofence_event        equipment_geofence_event[]
  service_request                 service_request[]

  @@index([account_id], map: "account_id_idx1")
  @@index([customer_id], map: "account_customer_id_bidx1")
  @@index([account_name], map: "account_name_bidx1")
}

model contract_type_lookup {
  contract_type_lookup_id     Int                  @id @default(autoincrement())
  description                 String               @db.VarChar(255)
  frequency                   Int
  billing_method              String               @db.VarChar(10)
  contract_panel_type         String?              @db.VarChar(50)
  fs_unit_flg                 Boolean?             @default(false)
  fs_reefer_flg               Boolean?             @default(false)
  maint_contract_flg          Boolean?             @default(false)
  status                      String               @db.VarChar(10)
  created_at                  DateTime             @default(now())
  created_by                  Int?
  contract_type_status_lookup simple_field_lookup  @relation("contract_type_status_relation", fields: [status], references: [field_code])
  schedule_agreement          schedule_agreement[]
}

model master_agreement {
  master_agreement_id            Int                               @id @default(autoincrement())
  contract_term_type             String                            @db.VarChar(10)
  contract_effective_date        DateTime
  contract_term                  Int
  contract_billing_method        String                            @db.VarChar(10)
  status                         String                            @db.VarChar(10)
  contract_end_date              DateTime
  contract_start_Date            DateTime?
  is_deleted                     Boolean                           @default(false)
  deleted_by                     Int?
  deleted_at                     DateTime?
  created_at                     DateTime                          @default(now())
  created_by                     Int?
  updated_at                     DateTime?
  updated_by                     Int?
  customerCustomer_id            Int?
  accountAccount_id              Int?
  account                        account?                          @relation(fields: [accountAccount_id], references: [account_id])
  customer                       customer?                         @relation(fields: [customerCustomer_id], references: [customer_id])
  master_agreement_status_lookup simple_field_lookup               @relation("master_agreement_status_relation", fields: [status], references: [field_code])
  attachments                    master_agreement_has_attachment[]
  schedule_agreement             schedule_agreement[]

  @@index([master_agreement_id], map: "master_agreement_id_idx1")
  @@index([status], map: "master_agreement_status_bidx1")
}

model master_agreement_has_attachment {
  master_agreement_has_attachment_id BigInt           @id @default(autoincrement())
  master_agreement_id                Int
  attachment_id                      BigInt
  date_uploaded                      DateTime?
  expiration_date                    DateTime?
  created_at                         DateTime         @default(now())
  created_by                         Int?
  attachment                         attachment       @relation(fields: [attachment_id], references: [attachment_id])
  master_agreement                   master_agreement @relation(fields: [master_agreement_id], references: [master_agreement_id])

  @@index([master_agreement_has_attachment_id], map: "master_agreement_master_agreement_has_attachment_id_idx1")
  @@index([master_agreement_id], map: "master_agreement_master_agreement_id_bidx1")
  @@index([attachment_id], map: "master_agreement_attachment_id_bidx1")
}

model schedule_agreement {
  schedule_agreement_id             Int                                 @id @default(autoincrement())
  master_agreement_id               Int
  schedule_type                     String                              @db.VarChar(4)
  contract_type_lookup_id           Int
  facility_lookup_id                Int
  effective_date                    DateTime
  contract_term                     Int
  contract_term_type                String                              @db.VarChar(10)
  contract_billing_method           String                              @db.VarChar(10)
  agreement_po                      String?
  schedule_agreement_date           DateTime
  termination_date                  DateTime
  early_termination_date            DateTime
  full_term_months                  Int
  non_cancel_months                 Int
  is_sub_unit_allowed               Boolean                             @default(false)
  max_sub_days                      Int
  max_sub_days_duration             Int
  status                            String                              @db.VarChar(10)
  created_by                        Int?
  created_at                        DateTime
  updated_at                        DateTime
  updated_by                        Int?
  dot_inspection                    dot_inspection[]
  preventive_maintenance_schedule   preventive_maintenance_schedule[]
  contract_type_lookup_ref          contract_type_lookup                @relation(fields: [contract_type_lookup_id], references: [contract_type_lookup_id])
  facility_lookup_ref               facility_lookup                     @relation(fields: [facility_lookup_id], references: [facility_lookup_id])
  master_agreement_ref              master_agreement                    @relation(fields: [master_agreement_id], references: [master_agreement_id])
  schedule_agreement_status_lookup  simple_field_lookup                 @relation("schedule_agreement_status_relation", fields: [status], references: [field_code])
  schedule_agreement_has_attachment schedule_agreement_has_attachment[]
  schedule_agreement_line_item      schedule_agreement_line_item[]
}

model schedule_agreement_has_attachment {
  schedule_agreement_has_attachment_id BigInt             @id @default(autoincrement())
  schedule_agreement_id                Int
  attachment_id                        BigInt?
  date_uploaded                        DateTime
  expiration_date                      DateTime
  created_at                           DateTime
  created_by                           Int?
  attachment                           attachment?        @relation(fields: [attachment_id], references: [attachment_id])
  schedule_agreement_ref               schedule_agreement @relation(fields: [schedule_agreement_id], references: [schedule_agreement_id])
}

model equipment_type_allocation {
  equipment_type_allocation_id            Int                          @id @default(autoincrement())
  schedule_agreement_line_item_id         Int
  account_id                              Int
  units_allowed                           Int
  units_assigned                          Int
  pms_override                            Boolean
  status                                  String                       @db.VarChar(10)
  created_at                              DateTime                     @default(now())
  created_by                              Int?
  equipment_assignment                    equipment_assignment[]
  account                                 account                      @relation(fields: [account_id], references: [account_id])
  schedule_agreement_line_item_ref        schedule_agreement_line_item @relation(fields: [schedule_agreement_line_item_id], references: [schedule_agreement_line_item_id])
  equipment_type_allocation_status_lookup simple_field_lookup          @relation("equipment_type_allocation_status_relation", fields: [status], references: [field_code])

  @@index([equipment_type_allocation_id], map: "equipment_type_allocation_id_idx1")
}

model schedule_agreement_line_item {
  schedule_agreement_line_item_id Int                         @id @default(autoincrement())
  schedule_agreement_id           Int
  equipment_type_lookup_id        Int
  oem_make_model_lookup_id        Int
  number_of_units                 Int?
  number_of_months                Int?
  rate                            Int?
  fixed_rate                      Int?
  variable_rate                   Int?
  estimated_miles                 Int?
  estimated_hours                 String?
  status                          String                      @db.VarChar(10)
  created_at                      DateTime                    @default(now())
  created_by                      Int?
  updated_at                      DateTime?
  updated_by                      Int?
  equipment_type_allocation       equipment_type_allocation[]
  equipment_type_lookup_ref       equipment_type_lookup       @relation(fields: [equipment_type_lookup_id], references: [equipment_type_lookup_id])
  oem_make_model_lookup_ref       oem_make_model_lookup       @relation(fields: [oem_make_model_lookup_id], references: [oem_make_model_lookup_id])
  schedule_agreement_ref          schedule_agreement          @relation(fields: [schedule_agreement_id], references: [schedule_agreement_id])
}

model equipment_assignment {
  equipment_assignment_id            Int                       @id @default(autoincrement())
  equipment_type_allocation_id       Int
  equipment_id                       Int
  activation_date                    DateTime
  deactivation_date                  DateTime
  action_reason_type                 String                    @db.VarChar(4)
  driver_name                        String                    @db.VarChar(100)
  is_substitute_allowed              Boolean                   @default(false)
  is_gps_tracking                    Boolean                   @default(false)
  created_by                         Int?
  created_at                         DateTime                  @default(now())
  updated_at                         DateTime
  updated_by                         Int?
  equipment_assignment_reason_lookup simple_field_lookup       @relation("equipment_assignment_reason_relation", fields: [action_reason_type], references: [field_code])
  equipment_ref                      equipment                 @relation(fields: [equipment_id], references: [equipment_id])
  equipment_type_allocation_ref      equipment_type_allocation @relation(fields: [equipment_type_allocation_id], references: [equipment_type_allocation_id])
}

model country_lookup {
  country_lookup_id            Int                 @id @default(autoincrement())
  country_code                 String              @unique
  country_name                 String?
  status                       String              @db.VarChar(10)
  created_at                   DateTime            @default(now())
  created_by                   Int?
  account                      account[]
  country_lookup_status_lookup simple_field_lookup @relation("country_status_relation", fields: [status], references: [field_code])

  user user[]
}

model tag_lookup {
  tag_lookup_id            Int                 @id @default(autoincrement())
  tag_name                 String              @unique
  status                   String              @default("ACTIVE")
  created_at               DateTime            @default(now())
  created_by               Int?
  geofence_accounts        geofence_account[]
  tag_lookup_status_lookup simple_field_lookup @relation("tag_status_relation", fields: [status], references: [field_code])
}

model equipment_geofence_event {
  equipment_geofence_event_id Int       @id @default(autoincrement())
  equipment_id                Int
  account_id                  Int
  geofence_account_id         Int // for geofence reference
  event_type                  String // 'entry' or 'exit'
  latitude                    Float
  longitude                   Float
  event_time                  DateTime  @default(now())
  equipment                   equipment @relation(fields: [equipment_id], references: [equipment_id])
  account                     account   @relation(fields: [account_id], references: [account_id])

  @@index([equipment_id])
  @@index([account_id])
  @@index([event_time])
  @@index([geofence_account_id])
}

model event_master {
  event_master_id  Int                @id @default(autoincrement())
  event_name       String
  event_type       String
  metric_value     Int?               @default(0)
  operation_type   String
  customer_id      Int?
  created_at       DateTime           @default(now())
  created_by       Int?
  updated_at       DateTime?
  updated_by       String?
  equipment        equipment[]
  customer         customer?          @relation(fields: [customer_id], references: [customer_id])
  geofence_account geofence_account[]
}

model geofence_account {
  geofence_account_id Int           @id @default(autoincrement())
  geofence_name       String
  description         String?
  geofence_location   String?
  shape_type          String
  polygon             Bytes? /// need to check this setup GEOMETRY(POLYGON, 4326)
  center_lat          Float?
  center_lng          Float?
  radius_meters       Float?
  owner               String?
  status              String?       @default("ACTIVE")
  account_ids         Json?
  event_master_id     Int?
  event_master        event_master? @relation(fields: [event_master_id], references: [event_master_id])

  customer_id                    Int?
  tag_lookup_id                  Int
  is_deleted                     Boolean              @default(false)
  created_at                     DateTime             @default(now())
  created_by                     Int?
  updated_at                     DateTime?
  updated_by                     String?
  customer                       customer?            @relation(fields: [customer_id], references: [customer_id])
  geofence_account_status_lookup simple_field_lookup? @relation("geofence_account_status_relation", fields: [status], references: [field_code])
  tag_lookup                     tag_lookup           @relation(fields: [tag_lookup_id], references: [tag_lookup_id])
}

model geofence_event_type_lookup {
  geofence_event_type_lookup_id     Int                 @id @default(autoincrement())
  event_name                        String              @db.VarChar(225)
  event_category                    String              @db.VarChar(255)
  description                       String              @db.VarChar(255)
  status                            String              @db.VarChar(10)
  created_at                        DateTime            @default(now())
  created_by                        Int?
  geofence_event_type_status_lookup simple_field_lookup @relation("geofence_event_type_status_relation", fields: [status], references: [field_code])
}

model geofence_alerts {
  geofence_alert_id   Int       @id @default(autoincrement())
  account_id          Int[]     @default([])
  geofence_account_id Int[]     @default([])
  status              String    @db.VarChar(50)
  is_deleted          Boolean   @default(false)
  deleted_by          Int?
  deleted_at          DateTime
  created_at          DateTime  @default(now())
  created_by          Int?
  updated_at          DateTime
  updated_by          Int?
  customer_id         Int
  events_id           Int[]     @default([])
  between_hours_from  String?   @db.VarChar(8)
  between_hours_to    String?   @db.VarChar(8)
  specific_days       String[]  @default([])
  start_date          DateTime?
  end_date            DateTime?
  event_duration      String?   @db.VarChar(255) // 👈 stored as String
  delivery_methods    Int
  recipients          String[] // 👈 array
  delivery_frequency  String[]  @default([]) // 👈 array
  customer            customer? @relation(fields: [customerCustomer_id], references: [customer_id])
  customerCustomer_id Int?
}

model geofence_alert_config {
  alert_config_id         Int      @id @default(autoincrement())
  account_id              Int
  recipient_id            Int
  delivery_id             Int
  alert_enabled           String   @db.VarChar(10)
  delivery_frequency_code String   @db.VarChar(255)
  alert_period            String   @db.VarChar(255)
  alert_expiry_date       DateTime
  is_deleted              Boolean  @default(false)
  deleted_by              Int?
  deleted_at              DateTime
  created_at              DateTime @default(now())
  created_by              Int?
  updated_at              DateTime
  updated_by              Int?
}

model alert_recipients {
  recipient_id Int      @id @default(autoincrement())
  account_id   Int
  user_id      Int
  created_at   DateTime @default(now())
  is_deleted   Boolean  @default(false)
  deleted_by   Int?
  deleted_at   DateTime
  created_by   Int?
  updated_at   DateTime
  updated_by   Int?
}

model delivery_method_lookup {
  delivery_id                   Int                 @id @default(autoincrement())
  method_type                   String              @db.VarChar(20)
  status                        String              @db.VarChar(10)
  created_at                    DateTime            @default(now())
  created_by                    Int?
  delivery_method_status_lookup simple_field_lookup @relation("delivery_method_status_relation", fields: [status], references: [field_code])
}

model alert_templates {
  template_id                  BigInt               @id @default(autoincrement())
  alert_id                     BigInt
  subject_template             String?              @db.VarChar(200)
  body_template                String?              @db.VarChar(1000)
  delivery_id                  String               @db.VarChar(50)
  status                       String?              @db.VarChar(50)
  is_deleted                   Boolean              @default(false)
  deleted_by                   Int?
  deleted_at                   DateTime
  created_at                   DateTime             @default(now())
  created_by                   Int?
  updated_at                   DateTime
  updated_by                   Int?
  alert_template_status_lookup simple_field_lookup? @relation("alert_template_status_relation", fields: [status], references: [field_code])
}

model preventive_maintenance_schedule {
  pm_schedule_id                                Int                            @id @default(autoincrement())
  schedule_agreement_id                         Int
  equipment_id                                  Int?
  account_id                                    Int
  facility_lookup_id                            Int                            @default(1)
  pm_type                                       String?                        @default("PM 180") @db.VarChar(255)
  pm_task_description                           String                         @db.VarChar(255)
  frequency_interval                            Int
  frequency_type                                String                         @db.VarChar(10)
  status                                        String                         @db.VarChar(15)
  comments                                      String?
  created_at                                    DateTime                       @default(now())
  created_by                                    Int?
  updated_at                                    DateTime?
  updated_by                                    Int?
  preventive_maintenance_events                 preventive_maintenance_event[]
  account                                       account                        @relation(fields: [account_id], references: [account_id])
  equipment                                     equipment?                     @relation(fields: [equipment_id], references: [equipment_id])
  facility_lookup                               facility_lookup                @relation(fields: [facility_lookup_id], references: [facility_lookup_id])
  schedule_agreement                            schedule_agreement             @relation(fields: [schedule_agreement_id], references: [schedule_agreement_id])
  preventive_maintenance_schedule_status_lookup simple_field_lookup            @relation("preventive_maintenance_schedule_status_relation", fields: [status], references: [field_code])

  @@index([account_id], map: "pm_schedule_account_idx")
  @@index([facility_lookup_id], map: "pm_schedule_facility_idx")
}

model preventive_maintenance_event {
  pm_event_id                                Int                             @id @default(autoincrement())
  equipment_id                               Int
  pm_schedule_id                             Int
  account_id                                 Int
  performed_date                             DateTime?
  next_due_date                              DateTime
  work_performed                             String?                         @db.VarChar(255)
  location                                   String?                         @db.VarChar(255)
  vendor_technician                          String?                         @db.VarChar(255)
  time_taken                                 Int?
  warranty_status                            String?                         @db.VarChar(255)
  after_hours                                Boolean?                        @default(false)
  notes                                      String?
  status                                     String                          @db.VarChar(15)
  created_at                                 DateTime                        @default(now())
  created_by                                 Int?
  updated_at                                 DateTime?
  updated_by                                 Int?
  pm_parts_used                              pm_parts_used[]
  account                                    account                         @relation(fields: [account_id], references: [account_id])
  equipment                                  equipment                       @relation(fields: [equipment_id], references: [equipment_id])
  preventive_maintenance_schedule            preventive_maintenance_schedule @relation(fields: [pm_schedule_id], references: [pm_schedule_id])
  preventive_maintenance_event_status_lookup simple_field_lookup             @relation("preventive_maintenance_event_status_relation", fields: [status], references: [field_code])

  @@index([account_id], map: "pm_event_account_idx")
}

model pm_parts_used {
  pm_parts_id                  Int                          @id @default(autoincrement())
  pm_event_id                  Int
  part_name                    String                       @db.VarChar(255)
  part_quantity                Int
  part_cost                    Decimal?                     @db.Decimal(10, 2)
  created_at                   DateTime                     @default(now())
  created_by                   Int?
  updated_at                   DateTime?
  updated_by                   Int?
  preventive_maintenance_event preventive_maintenance_event @relation(fields: [pm_event_id], references: [pm_event_id])
}

model dot_inspection {
  dot_inspection_id        Int                        @id @default(autoincrement())
  equipment_id             Int
  account_id               Int                        @default(1)
  schedule_agreement_id    Int
  inspection_date          DateTime
  inspector_name           String                     @db.VarChar(255)
  inspection_result        String                     @db.VarChar(15)
  notes                    String?
  next_inspection_due      DateTime?
  created_at               DateTime                   @default(now())
  created_by               Int?
  updated_at               DateTime?
  updated_by               Int?
  account                  account                    @relation(fields: [account_id], references: [account_id])
  equipment                equipment                  @relation(fields: [equipment_id], references: [equipment_id])
  schedule_agreement       schedule_agreement         @relation(fields: [schedule_agreement_id], references: [schedule_agreement_id])
  dot_inspection_violation dot_inspection_violation[]

  @@index([account_id], map: "dot_inspection_account_idx")
}

model dot_inspection_violation {
  dot_inspection_violation_id Int            @id @default(autoincrement())
  dot_inspection_id           Int
  violation_code              String         @db.VarChar(50)
  description                 String
  severity_level              String         @db.VarChar(20)
  corrective_action_taken     String?
  created_at                  DateTime       @default(now())
  created_by                  Int?
  updated_at                  DateTime?
  updated_by                  Int?
  dot_inspection              dot_inspection @relation(fields: [dot_inspection_id], references: [dot_inspection_id])
}

model service_urgency_lookup {
  service_urgency_lookup_id Int @id @default(autoincrement())

  urgency_code String @unique @db.VarChar(20)

  description String? @db.VarChar(255)

  status String? @db.VarChar(10)

  created_at DateTime @default(now())

  created_by String? @db.VarChar(255) // was Int?

  updated_at DateTime?

  updated_by String? @db.VarChar(255) // optional, keep strings consistent

  service_requests service_request[]

  @@index([urgency_code], map: "service_urgency_code_bidx1")
  @@index([status], map: "service_urgency_status_bidx1")
}

model service_saved_location {
  service_saved_location_id Int               @id @default(autoincrement())
  label                     String?           @db.VarChar(100)
  line1                     String            @db.VarChar(255)
  line2                     String?           @db.VarChar(255)
  created_at                DateTime
  created_by                String            @db.VarChar(255) // was Int
  last_used_at              DateTime?
  is_active                 Boolean           @default(true)
  service_requests          service_request[]

  @@index([created_by], map: "saved_location_created_by_idx")
  @@index([is_active], map: "saved_location_active_idx")
}

model service_type_lookup {
  service_type_lookup_id Int               @id @default(autoincrement())
  type_name              String            @db.VarChar(100)
  status                 String?           @db.VarChar(10)
  is_deleted             Boolean           @default(false)
  deleted_by             Int?
  deleted_at             DateTime?
  created_at             DateTime          @default(now())
  created_by             Int?
  updated_at             DateTime?
  updated_by             Int?
  service_requests       service_request[]

  @@index([type_name], map: "service_type_lookup_type_name_bidx1")
  @@index([status], map: "service_type_lookup_status_bidx1")
}

model service_request {
  service_request_id        Int                    @id @default(autoincrement())
  equipment_id              Int?
  account_id                Int
  external_unit_number      String?                @db.VarChar(100)
  service_urgency_lookup_id Int
  service_type_lookup_id    Int?
  issue_description         String                 @db.Text
  po_reference              String?                @db.VarChar(100)
  driver_name               String?                @db.VarChar(100)
  driver_phone              String?                @db.VarChar(50)
  driver_with_unit          Boolean                @default(false)
  primary_contact_name      String?                @db.VarChar(100)
  primary_contact_phone     String?                @db.VarChar(50)
  primary_contact_email     String?                @db.VarChar(255)
  pref_email                Boolean                @default(false)
  pref_phone                Boolean                @default(false)
  pref_sms                  Boolean                @default(false)
  location_line1            String?                @db.VarChar(255)
  location_line2            String?                @db.VarChar(255)
  saved_location_id         Int?
  save_location             Boolean                @default(false)
  last_pm_date              DateTime?
  next_pm_due               DateTime?
  attachment_id             BigInt?                @unique
  agreed_terms              Boolean                @default(false)
  created_at                DateTime
  created_by                String                 @db.VarChar(255)
  equipment_ref             equipment?             @relation("EquipmentToServiceRequests", fields: [equipment_id], references: [equipment_id])
  urgency_ref               service_urgency_lookup @relation(fields: [service_urgency_lookup_id], references: [service_urgency_lookup_id])
  account_ref               account                @relation(fields: [account_id], references: [account_id])

  service_type_ref service_type_lookup? @relation(fields: [service_type_lookup_id], references: [service_type_lookup_id])

  attachment_ref attachment? @relation("AttachmentToServiceRequest", fields: [attachment_id], references: [attachment_id])

  saved_location service_saved_location? @relation(fields: [saved_location_id], references: [service_saved_location_id])
  workorder      workorder[]

  @@index([equipment_id], map: "service_request_equipment_idx")
  @@index([service_urgency_lookup_id], map: "service_request_urgency_idx")
  @@index([saved_location_id], map: "service_request_saved_location_idx")
}

model workorder_parts_used {
  workorder_parts_id Int @id @default(autoincrement())

  workorder_id Int

  part_name String @db.VarChar(255)

  part_quantity Int

  part_cost Decimal? @db.Decimal(10, 2)

  workorder_parts_description String?

  created_at DateTime @default(now())

  created_by Int?

  updated_at DateTime?

  updated_by Int?

  workorder workorder @relation(fields: [workorder_id], references: [workorder_id])
}

model workorder {
  workorder_id Int @id @default(autoincrement())

  service_request_id Int

  workorder_ref_id String? @db.VarChar(255)

  workorder_description String

  workorder_assigned_date DateTime

  workorder_eta DateTime

  workorder_priority_start_date DateTime

  workorder_priority_end_date DateTime

  technician_name String? @db.VarChar(255)

  technician_email String? @db.VarChar(50)

  technician_phone String? @db.VarChar(20)

  repair_type String? @db.VarChar(255)

  actival_time_arrival DateTime?

  location String? @db.VarChar(255)

  serial_number String? @db.VarChar(255)

  operating_hours String? @db.VarChar(255)

  workorder_status String?

  created_at DateTime @default(now())

  created_by Int?

  updated_at DateTime?

  updated_by Int?

  service_request service_request @relation(fields: [service_request_id], references: [service_request_id])

  workorder_parts_used workorder_parts_used[]

  workorder_has_attachment workorder_has_attachment?
}

model workorder_has_attachment {
  workorder_has_attachment_id BigInt @id @default(autoincrement())

  workorder_id Int @unique

  attachment_id BigInt @unique

  date_uploaded DateTime?

  expiration_date DateTime?

  created_at DateTime @default(now())

  created_by Int?

  attachment_ref attachment @relation(fields: [attachment_id], references: [attachment_id])

  workorder_ref workorder @relation(fields: [workorder_id], references: [workorder_id])

  @@index([workorder_has_attachment_id], map: "workorder_has_attachment_id_idx1")
  @@index([workorder_id], map: "workorder_has_attachment_equipment_id_bidx1")
  @@index([attachment_id], map: "workorder_has_attachment_attachment_id_bidx1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model spatial_ref_sys {
  srid      Int     @id
  auth_name String? @db.VarChar(256)
  auth_srid Int?
  srtext    String? @db.VarChar(2048)
  proj4text String? @db.VarChar(2048)
}

enum AccountType {
  NATIONAL
  REGIONAL
}
